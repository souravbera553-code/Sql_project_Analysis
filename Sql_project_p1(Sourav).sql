# Sql Retail sale Analysis
create database Sql_project_p1;
use sql_project_p1;

#create Table 
Drop Table if exists retail_sales;
create table retail_sales ( 
transactions_id int primary key ,
sale_date Date ,
sale_time Time ,
customer_id int ,
gender varchar(10) ,
age int ,
category varchar(15) ,
quantiy int ,
price_per_unit float ,
cogs float ,
total_sale float ) ;

select*from retail_sales limit 10;
select count(*) from retail_sales;

# Data Cleaning

SELECT * FROM retail_sales
WHERE 
    transactions_id IS NULL
    OR
    sale_date IS NULL
    OR 
    sale_time IS NULL
    OR
    gender IS NULL
    OR
    category IS NULL
    OR
    quantity IS NULL
    OR
    cogs IS NULL
    OR
    total_sale IS NULL;
    
    DELETE FROM retail_sales
WHERE 
    transactions_id IS NULL
    OR
    sale_date IS NULL
    OR 
    sale_time IS NULL
    OR
    gender IS NULL
    OR
    category IS NULL
    OR
    quantity IS NULL
    OR
    cogs IS NULL
    OR
    total_sale IS NULL;
    
    # data exploration
    #how many sales we have 
    select count(transactions_id) from retail_sales;
    # How many uniuque customers we have ?
    select count(distinct(customer_id)) from retail_sales;
    #how many category we have 
    select distinct(category) from retail_sales;
    
    # Data Analysis & Business Key Problems & Answers
    
    # 1. What is the total sales and number of orders for each product category?
SELECT  
    Category,                         
    SUM(total_sale) AS Total_sale,    
    COUNT(transactions_id) AS no_of_order 
FROM retail_sales
GROUP BY Category;

# 2.What is the monthly sales trend across all years?
SELECT 
    YEAR(sale_date) AS sales_year,
    MONTHNAME(sale_date) AS Sales_month,
    SUM(total_sale) AS Total_sale
FROM
    retail_sales
GROUP BY 1 , 2
ORDER BY 1,Total_sale  desc ;

#3 . Which month had the highest sales in each year?
SELECT sale_year, sale_month, total_sales
FROM (
    SELECT 
        YEAR(sale_date) AS sale_year,
        MONTHNAME(sale_date) AS sale_month,
        SUM(total_sale) AS total_sales,
        RANK() OVER(PARTITION BY YEAR(sale_date) ORDER BY SUM(total_sale) DESC) AS rnk
    FROM retail_sales
    GROUP BY YEAR(sale_date), MONTHNAME(sale_date)
) t
WHERE rnk = 1;

# 4. What is the average age of customers in each product category?
SELECT 
    category, ROUND(AVG(age), 0) AS Avarage_age
FROM
    retail_sales
GROUP BY category;

# 5. How do sales and order counts differ between male and female customers?
SELECT 
    gender, SUM(total_sale) AS Total_sales,
    count(transactions_id) as Total_order
    FROM
    retail_sales
GROUP BY gender;

# 6. Who are the top 5 customers based on their total spending?
SELECT 
    customer_id, SUM(total_sale) AS Total_Spending
FROM
    retail_sales
GROUP BY customer_id
order by Total_Spending desc
limit 5 ;

#7. How are sales distributed across different shifts of the day (Morning, Afternoon, Evening)?
select 
case 
when hour(sale_time)<12 then " Morning shift" 
when hour (sale_time) between 12 and 17 then "Afternoon shift"
else " Evening shift" 
End as Shift_time , 
COUNT(transactions_id) AS total_transactions,
sum(total_sale) as Sales 
from retail_sales 
group by Shift_time;

#8. What is the total profit (Sales â€“ COGS) generated by each category?
SELECT 
    Category,
    ROUND(SUM(Total_sale) - SUM(cogs), 2) AS Total_profit
FROM
    retail_sales
GROUP BY category;

# 9. What is the average transaction value across all sales?
SELECT 
    ROUND(AVG(total_sale),2) AS avg_transaction_value
FROM retail_sales;
 
 # 10. What is the year-over-year sales growth percentage?
SELECT 
    YEAR(sale_date) AS year,
    SUM(total_sale) AS total_sales,
    LAG(SUM(total_sale)) OVER (ORDER BY YEAR(sale_date)) AS prev_year_sales,
    ROUND(
        (SUM(total_sale) - LAG(SUM(total_sale)) OVER (ORDER BY YEAR(sale_date))) 
        / LAG(SUM(total_sale)) OVER (ORDER BY YEAR(sale_date)) * 100, 2
    ) AS sales_growth_percent
FROM retail_sales
GROUP BY YEAR(sale_date)
ORDER BY year;

# END OF PROJECT
